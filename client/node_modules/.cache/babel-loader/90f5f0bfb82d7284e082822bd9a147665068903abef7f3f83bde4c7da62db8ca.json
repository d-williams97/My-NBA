{"ast":null,"code":"var _jsxFileName = \"/Users/danielwilliams/Documents/Personal/Web Dev/Other/Projects/my-nba/client/src/App.jsx\";\nimport { QueryClient, QueryClientProvider } from \"@tanstack/react-query\";\nimport \"./App.css\";\nimport Player from \"./components/Player/Player\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst secondsInHours = 24 * 60 * 60; // 24hours in seconds\n\nconst queryClient = new QueryClient({\n  //is responsible for managing the caching, fetching, and state of queries in your React application.\n  queries: {\n    staleTime: secondsInHours * 1000,\n    cacheTime: secondsInHours * 1000\n  }\n\n  //stale time signifies how long the data is \"fresh\" for. If stale will trigger refetch\n  //cacheTime option defines the time, in milliseconds, that the data of a successful query result will be retained in the cache before potentially being garbage-collected.\n});\n\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(QueryClientProvider, {\n    client: queryClient,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(Player, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n}\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["QueryClient","QueryClientProvider","Player","jsxDEV","_jsxDEV","secondsInHours","queryClient","queries","staleTime","cacheTime","App","client","children","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/danielwilliams/Documents/Personal/Web Dev/Other/Projects/my-nba/client/src/App.jsx"],"sourcesContent":["import { QueryClient, QueryClientProvider } from \"@tanstack/react-query\";\nimport \"./App.css\";\nimport Player from \"./components/Player/Player\";\n\nconst secondsInHours = 24 * 60 * 60; // 24hours in seconds\n\nconst queryClient = new QueryClient({\n  //is responsible for managing the caching, fetching, and state of queries in your React application.\n  queries: {\n    staleTime: secondsInHours * 1000,\n    cacheTime: secondsInHours * 1000,\n  },\n\n  //stale time signifies how long the data is \"fresh\" for. If stale will trigger refetch\n  //cacheTime option defines the time, in milliseconds, that the data of a successful query result will be retained in the cache before potentially being garbage-collected.\n});\n\nfunction App() {\n  return (\n    <QueryClientProvider client={queryClient}>\n      <div className=\"App\">\n        {/* form with first and second name */}\n        <Player />\n      </div>\n    </QueryClientProvider>\n  );\n}\n\nexport default App;\n"],"mappings":";AAAA,SAASA,WAAW,EAAEC,mBAAmB,QAAQ,uBAAuB;AACxE,OAAO,WAAW;AAClB,OAAOC,MAAM,MAAM,4BAA4B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhD,MAAMC,cAAc,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC;;AAErC,MAAMC,WAAW,GAAG,IAAIN,WAAW,CAAC;EAClC;EACAO,OAAO,EAAE;IACPC,SAAS,EAAEH,cAAc,GAAG,IAAI;IAChCI,SAAS,EAAEJ,cAAc,GAAG;EAC9B;;EAEA;EACA;AACF,CAAC,CAAC;;AAEF,SAASK,GAAGA,CAAA,EAAG;EACb,oBACEN,OAAA,CAACH,mBAAmB;IAACU,MAAM,EAAEL,WAAY;IAAAM,QAAA,eACvCR,OAAA;MAAKS,SAAS,EAAC,KAAK;MAAAD,QAAA,eAElBR,OAAA,CAACF,MAAM;QAAAY,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACP;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACa,CAAC;AAE1B;AAACC,EAAA,GATQR,GAAG;AAWZ,eAAeA,GAAG;AAAC,IAAAQ,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}