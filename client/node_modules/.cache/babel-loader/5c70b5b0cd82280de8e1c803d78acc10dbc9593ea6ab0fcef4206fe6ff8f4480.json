{"ast":null,"code":"var _jsxFileName = \"/Users/danielwilliams/Documents/Personal/Web Dev/Other/Projects/my-nba/client/src/components/Player/Player.jsx\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { useQuery } from \"@tanstack/react-query\";\nimport getTeams from \"./getTeams\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Player = () => {\n  _s();\n  var _results$data;\n  const [team, setTeam] = useState(\"\");\n  const [player, setPlayer] = useState(\"\");\n\n  // -- useQuery to fetch player data\n  const results = useQuery({\n    queryKey: [\"searchPlayer\"],\n    queryFn: getTeams\n  }); //if data is stale or no data is found in catch searchPlayer runs. player is fetch dependancy\n\n  if (results.isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"loading\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 12\n    }, this);\n  }\n  const nbaTeams = (_results$data = results === null || results === void 0 ? void 0 : results.data) !== null && _results$data !== void 0 ? _results$data : null;\n  if (nbaTeams.length > 0) {\n    console.log(nbaTeams);\n  }\n  if (results.isSuccess) {\n    console.log(nbaTeams);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"teams\",\n        children: [\"Team\", /*#__PURE__*/_jsxDEV(\"select\", {\n          name: \"teams\",\n          id: \"teams\",\n          onChange: e => {\n            setTeam(e.target.value);\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"nba\",\n            children: \"nba\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 13\n          }, this), nbaTeams && nbaTeams.map(team => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: team.id,\n            children: team.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 17\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"lastName\",\n        children: [\"Player\", /*#__PURE__*/_jsxDEV(\"select\", {\n          name: \"players\",\n          id: \"players\",\n          onChange: e => {\n            setPlayer(e.target.value);\n          },\n          children: /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"player\",\n            children: \"player\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n_s(Player, \"qIjpcfSnS2IiMgDpch79hSI4hpw=\", false, function () {\n  return [useQuery];\n});\n_c = Player;\nexport default Player;\nvar _c;\n$RefreshReg$(_c, \"Player\");","map":{"version":3,"names":["useState","useQuery","getTeams","jsxDEV","_jsxDEV","Player","_s","_results$data","team","setTeam","player","setPlayer","results","queryKey","queryFn","isLoading","children","fileName","_jsxFileName","lineNumber","columnNumber","nbaTeams","data","length","console","log","isSuccess","htmlFor","name","id","onChange","e","target","value","map","_c","$RefreshReg$"],"sources":["/Users/danielwilliams/Documents/Personal/Web Dev/Other/Projects/my-nba/client/src/components/Player/Player.jsx"],"sourcesContent":["import { useState } from \"react\";\nimport { useQuery } from \"@tanstack/react-query\";\nimport getTeams from \"./getTeams\";\n\nconst Player = () => {\n  const [team, setTeam] = useState(\"\");\n  const [player, setPlayer] = useState(\"\");\n\n  // -- useQuery to fetch player data\n  const results = useQuery({\n    queryKey: [\"searchPlayer\"],\n    queryFn: getTeams,\n  }); //if data is stale or no data is found in catch searchPlayer runs. player is fetch dependancy\n\n  if (results.isLoading) {\n    return <div>loading</div>;\n  }\n\n  const nbaTeams = results?.data ?? null;\n\n  if (nbaTeams.length > 0) {\n    console.log(nbaTeams);\n  }\n\n  if (results.isSuccess) {\n    console.log(nbaTeams);\n  }\n\n  return (\n    <div>\n      <form>\n        <label htmlFor=\"teams\">\n          Team\n          <select\n            name=\"teams\"\n            id=\"teams\"\n            onChange={(e) => {\n              setTeam(e.target.value);\n            }}\n          >\n            <option value=\"nba\">nba</option>\n            {nbaTeams &&\n              nbaTeams.map((team) => (\n                <option value={team.id}>{team.name}</option>\n              ))}\n          </select>\n        </label>\n\n        <label htmlFor=\"lastName\">\n          Player\n          <select\n            name=\"players\"\n            id=\"players\"\n            onChange={(e) => {\n              setPlayer(e.target.value);\n            }}\n          >\n            <option value=\"player\">player</option>\n          </select>\n        </label>\n      </form>\n    </div>\n  );\n};\nexport default Player;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}